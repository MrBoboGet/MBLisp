(import text)
(import io)

(defmacro load-parser (bnf-name k)
    (setl bnf-name (str bnf-name))
    (setl root load-filepath)
    (if (is-file load-filepath)
        (setl root (parent-path root))
    )
    (setl bnf-path (+ root "/" bnf-name ".mbbnf"))
    (setl out-file (+ root "/" bnf-name ".lisp"))
    (if (not (exists bnf-path)) (error (+ "BNF file " bnf-path " doesn't exist")))
    (if (|| (not (exists out-file)) (< (mod-time out-file) (mod-time bnf-path)))
        (setl stream (open bnf-path))
        (setl parser-content (generate-parser stream k))
        (setl out-stream (open out-file "w"))
        (write out-stream parser-content)
        (flush out-stream)
    )
    `(import ,(symbol bnf-name))
)
